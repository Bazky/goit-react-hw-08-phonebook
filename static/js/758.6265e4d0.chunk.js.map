{"version":3,"file":"static/js/758.6265e4d0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/UserMenu/UserMenu.jsx","components/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"containerForm\":\"ContactForm_containerForm__s0x-h\",\"input\":\"ContactForm_input__Bl93P\",\"button__form\":\"ContactForm_button__form__g3dJs\"};","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/actions';\nimport css from './ContactForm.module.css';\nimport propTypes from 'prop-types';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(state => state.phonebook.contacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNumber(event.target.value);\n  };\n\n  const handleAddContact = ev => {\n    ev.preventDefault();\n    if (name.trim() !== '') {\n      const existingContact = contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      );\n\n      if (existingContact) {\n        alert(`${name} is already in contacts.`);\n      } else {\n        dispatch(addContact({ name: name.trim(), number: number.trim() }));\n        setName('');\n        setNumber('');\n      }\n    }\n  };\n\n  return (\n    <div className={css.contactForm}>\n      <form className={css.containerForm} onSubmit={handleAddContact}>\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n          required\n          value={name}\n          onChange={handleNameChange}\n          className={css.input}\n        />\n        <label>Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleNumberChange}\n          className={css.input}\n        />\n        <button className={css.button__form} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nContactForm.propTypes = {\n  onAddContact: propTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button__list\":\"ContactList_button__list__Om+n5\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport css from './ContactList.module.css';\nimport propTypes from 'prop-types';\n\nexport const ContactList = ({ onDeleteContact }) => {\n  const contacts = useSelector(state => state.phonebook.contacts);\n  const filter = useSelector(state => state.phonebook.filter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div>\n      <ul>\n        {filteredContacts.map(contact => (\n          <li key={contact.id}>\n            {contact.name}: {contact.number}\n            <button\n              className={css.button__list}\n              onClick={() => onDeleteContact(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  onDeleteContact: propTypes.func.isRequired,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/actions';\nimport PropTypes from 'prop-types';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.phonebook.filter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search contacts...\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../../redux/actions';\nimport { useAuth } from '../../auth/useAuth';\n\nexport const UserMenu = () => {\n  const { isLoggedIn, user } = useAuth();\n  const dispatch = useDispatch();\n\n  const handleLogout = async () => {\n    try {\n      await dispatch(logout());\n    } catch (error) {\n      console.error('Logout failed:', error.message);\n    }\n  };\n\n  return (\n    <div>\n      {isLoggedIn && <p>{user.user.email}</p>}\n      {isLoggedIn && <button onClick={handleLogout}>Logout</button>}\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from '../ContactForm/ContactForm';\nimport { ContactList } from '../ContactList/ContactList';\nimport { Filter } from '../Filter/Filter';\nimport { UserMenu } from '../UserMenu/UserMenu';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n  setFilter,\n} from '../../redux/actions';\nimport { current } from '../../redux/actions';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts);\n  const filter = useSelector(state => state.filter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    dispatch(current());\n  }, [dispatch]);\n\n  const handleAddContact = newContact => {\n    dispatch(addContact(newContact));\n  };\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <div>\n      <UserMenu />\n      <h1>Phonebook</h1>\n      <ContactForm contacts={contacts} onAddContact={handleAddContact} />\n      <h2>Contacts</h2>\n      <h5>Find contacts by name</h5>\n      <Filter filter={filter} onFilterChange={handleFilterChange} />\n      <ContactList onDeleteContact={handleDeleteContact} />\n    </div>\n  );\n}\n"],"names":["ContactForm","contacts","useSelector","state","phonebook","dispatch","useDispatch","name","setName","useState","number","setNumber","_jsx","className","css","children","_jsxs","onSubmit","ev","preventDefault","trim","find","contact","toLowerCase","alert","concat","addContact","type","pattern","title","required","value","onChange","event","target","ContactList","_ref","onDeleteContact","filter","filteredContacts","includes","map","onClick","id","Filter","placeholder","setFilter","UserMenu","isLoggedIn","user","useAuth","email","async","logout","error","console","message","Contacts","useEffect","fetchContacts","current","onAddContact","newContact","onFilterChange","deleteContact"],"sourceRoot":""}